name: Pull Request Open
on:
  pull_request:
  push:
    branches:
      - main
      - 15.0.x
      - 14.0.x
jobs:
  ci-build-test-pr:
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: "-Xmx1500m -XX:+HeapDumpOnOutOfMemoryError"
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: maven

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - run: ./mvnw --version

      - name: Getting project properties
        run: |
            ./mvnw properties:write-project-properties -Dproperties.outputFile=mvn-write-project.properties
            cat mvn-write-project.properties | while IFS='=' read a b; do echo ${a//[-.]/_}=$b; done >> "$GITHUB_OUTPUT"
        id: properties
      - name: Maven build (PR)
        if: ${{github.event_name == 'pull_request'}}
        run: >
            ./mvnw -s maven-settings.xml clean install -DskipTests -Pnative
            -pl :infinispan-component-annotations,:infinispan-logging-annotations,:infinispan-checkstyle,commons,:infinispan-defaults-maven-plugin,:infinispan-logging-processor,:infinispan-commons-spi,:infinispan-component-processor,:infinispan-commons-test,:infinispan-api,:infinispan-commons
      - name: Maven test
        if: ${{github.event_name == 'pull_request'}}
        run: >
            ./mvnw -s maven-settings.xml verify -B -e -DrerunFailingTestsCount=2 -Pnative
            -fae -Dansi.strip=true
            -pl :infinispan-component-annotations,:infinispan-logging-annotations,:infinispan-checkstyle,commons,:infinispan-defaults-maven-plugin,:infinispan-logging-processor,:infinispan-commons-spi,:infinispan-component-processor,:infinispan-commons-test,:infinispan-api,:infinispan-commons
      - name: Maven build (Branch)
        if: ${{github.event_name == 'push'}}
        run: >
            ./mvnw -s maven-settings.xml clean install -DskipTests -Pdistribution
      - name: Publish Test Report
        if: success() || failure()
        uses: ScaCap/action-surefire-report@v1
        with:
          fail_on_test_failures: true
          fail_if_no_tests: false

# Create artifact with branch name and surefile flaky test report
      - name: Check flaky report existence
        if: success() || failure()
        id: check_files
        uses: andstor/file-existence-action@v3
        with:
          files: "**/target/*-reports*/**/TEST-*FLAKY.xml"

      - name: Archive base_ref
        if: (success() || failure()) && steps.check_files.outputs.files_exists == 'true'
        env:
          TARGET_BRANCH: ${{ github.base_ref }}
          EVENT_NAME: ${{ github.event_name }}
        run: |
          echo -n $TARGET_BRANCH > target-branch.txt
          echo -n $EVENT_NAME > event_name.txt

      - name: Archive flaky test report
        if: (success() || failure()) && steps.check_files.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v4
        with:
            name: flaky-test-report
            path: |
              **/target/*-reports*/**/TEST-*FLAKY.xml
              target-branch.txt
              event_name.txt
      - name: Archive server distro
        if: ${{ github.event_name}} == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.properties.outputs.infinispan_brand_prefix }}-${{ steps.properties.outputs.infinispan_brand_version }}
          overwrite: true
          path: |
            distribution/target/distribution/infinispan*.zip
